#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ(2.57)
AC_INIT([PSRCHIVE],[6.0],[psrchive@sourceforge.net])

AC_CONFIG_AUX_DIR([config])
AC_CONFIG_SRCDIR([utils/Makefile.am])

AC_ARG_VAR([PSRHOME],[Standard pulsar home directory])
AC_ARG_VAR([LOGIN_ARCH],[Architecture-dependent sub-directory of PSRHOME])
AC_PREFIX_DEFAULT([${PSRHOME:-"/usr/local"}${PSRHOME:+"/$LOGIN_ARCH"}])

if test x"$PSRHOME" = x; then
  AC_MSG_WARN([The PSRHOME environment variable is not set])
else
  if test x"$LOGIN_ARCH" = x; then
    AC_MSG_WARN([The LOGIN_ARCH environment variable is not set])
  fi
fi

AM_INIT_AUTOMAKE([subdir-objects])
AC_DISABLE_SHARED

# Enable large-file support
AC_SYS_LARGEFILE

# Ensure the SIGPROC find does not over-ride the standard
SWIN_PROG_FIND

# Enable convenience compiler selection
SWIN_COMPILER

# Checks for programs.
AC_PROG_CXX
AC_PROG_CXXCPP
AC_PROG_CC
AC_PROG_CPP
AM_PROG_CC_C_O
AC_PROG_INSTALL
AC_PROG_LIBTOOL
AC_PROG_FC
AC_F77_WRAPPERS
_STAR_RESTFP_FIX

#
# Check C++ template compilation
#
SWIN_BEST_PARTIAL_SPECIALIZATION
SWIN_DEFAULT_PARTIAL_SPECIALIZATION
SWIN_COMPLEX_TEMPLATE

#
# Disable the debugging information option, -g
#
SWIN_DEBUG

#
# Set up for standard pulsar installation
#
CPPFLAGS="-I$PSRHOME/packages/$LOGIN_ARCH/include $CPPFLAGS"
LDFLAGS="-L$PSRHOME/packages/$LOGIN_ARCH/lib $LDFLAGS"

#
# Checks for essential libraries
#
AC_CHECK_LIB([m], [sin])
SWIN_LIB_SLA([],AC_MSG_ERROR([Cannot continue without SLALIB]))
SWIN_LIB_FFTW
SWIN_LIB_MKL
SWIN_LIB_IPP

#
# Check that at least one FFT library is available
#
if test x"$have_fftw" = xno -a x"$have_fftw3" = xno -a x"$have_mkl" = xno; then
  AC_MSG_ERROR([Neither FFTW-2, FFTW-3, nor MKL FFT libraries were found])
fi

AC_SUBST(FFT_LIBS)
FFT_LIBS="$MKL_LIBS $FFTW_LIBS $FFTW3_LIBS $IPP_LIBS"
AC_SUBST(FFT_CFLAGS)
FFT_CFLAGS="$MKL_CFLAGS $FFTW_CFLAGS $FFTW3_CFLAGS $IPP_CFLAGS"

#
# Checks for optional libraries
#
SWIN_LIB_CFITSIO
SWIN_LIB_MPI
SWIN_LIB_READLINE
SWIN_LIB_PTHREAD

if test x"$enable_lean" == xyes; then

AM_CONDITIONAL(HAVE_PGPLOT, [test 1 = 0])
AM_CONDITIONAL(HAVE_QT, [test 1 = 0])
AM_CONDITIONAL(HAVE_QTDRIV, [test 1 = 0])

else

#
# Checks for graphics libraries
#
SWIN_LIB_PGPLOT
BNV_HAVE_QT
SWIN_LIB_QTDRIV

fi

# 
# For developers: ensure that the config directory m4 macros are parsed
#
ACLOCAL="$ACLOCAL -I config"

#
# For developers: preserve file modification times
#
INSTALL_DATA="${INSTALL} -m 644 -p"
install_sh="CPPROG='cp -p' ${install_sh}"

#
# For developers: provide the ability to compile a lean version of the code
#

AC_ARG_WITH([lean], AC_HELP_STRING([--enable-lean],
				   [compile a lean version of the library]))

AM_CONDITIONAL(MAKE_LEAN, [test x"$enable_lean" == xyes])

#
# Checks for library functions.
#
SWIN_FUNC_GETOPT_LONG

AM_CONFIG_HEADER([config.h])
AC_CONFIG_FILES([third/Makefile
		third/parsifal/Makefile
		utils/units/Makefile
		utils/fft/Makefile
		utils/genutil/Makefile
		utils/pgutil/Makefile
		utils/qtutil/Makefile
		utils/fitsutil/Makefile
		utils/tempo/Makefile
		utils/Makefile
		Core/Makefile
		Core/Bases/Makefile
		Core/Extensions/Makefile
		Core/Formats/Makefile
		Core/Formats/EPN/Makefile
		Core/Formats/Timer/Makefile
		Core/Formats/PSRFITS/Makefile
                Core/Formats/ASCII/Makefile
		Core/Applications/Makefile
		More/General/Makefile
		More/Plotting/Makefile
		More/MEAL/Makefile
		More/Polarimetry/Makefile
		More/Polarimetry/iri2001/Makefile
                More/GUI/Makefile
		More/rhythm/Makefile
		More/Applications/Makefile
		More/Makefile
		Makefile])

AC_OUTPUT

echo
echo

if test x"$enable_lean" == xyes; then

   echo "********************************************"
   echo "A lean version of PSRCHIVE will be compiled."
   echo "This means that the polarimetric calibration"
   echo "software, related error analysis routines,"
   echo "and graphical interfaces will be unavailable."
   echo "********************************************"

else

if test x"$have_cfitsio" != xyes; then
   echo "The CFITSIO library was not found:"
   echo "  PSRCHIVE applications will not be able to load PSRFITS files."
fi

if test x"$have_pgplot" != xyes; then
   echo "The PGPLOT library was not found:"
   echo "  PSRCHIVE applications will not be able to plot."
fi

if test x"$have_qt" != xyes; then
   echo "The Qt library was not found:"
   echo "  PSRCHIVE graphical user interfaces will not be compiled."
fi

if test x"$have_qtdriv" != xyes; then
   echo "The qtdriv device handler is not installed:"
   echo "  rhythm will not be compiled."
fi

fi

echo
echo
