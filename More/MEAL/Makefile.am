
noinst_LTLIBRARIES = libunits.la

libunits_la_SOURCES = Error.C HeapTracked.C ReferenceAble.C stringtok.C	      \
	Function.C Argument.C Parameters.C Projection.C Composite.C	      \
	Univariate.C Scalar.C ScalarConstant.C ScalarMath.C OptimizedScalar.C \
	ScalarValue.C UnaryScalar.C ScalarRoot.C ScalarSine.C ScalarCosine.C  \
	ScalarTangent.C ScalarHypSine.C ScalarHypCosine.C ScalarHypTangent.C  \
	ScalarAbsolute.C ScalarExponential.C ScalarLogarithm.C		      \
	ScalarInverseHypTangent.C BinaryScalar.C ScalarInverseTangent2.C      \
	ScalarPower.C ScalarArgument.C UnivariateOptimizedScalar.C	      \
	Polynomial.C Gaussian.C Complex2Value.C Complex2.C Complex2Math.C     \
	OptimizedComplex2.C Complex2Constant.C Gain.C Phase.C Boost.C	      \
	Rotation.C Polar.C Coherency.C NormalizeStokes.C Tracer.C	      \
	CongruenceTransformation.C Function_load.C Function_parse.C	      \
	Function_print.C Function_new_Function.C Pauli.C linchi2.C            \
	TextInterface.C header_PromoteTraits

# This header file is generated by generate_PromoteTraits.C
nodist_include_HEADERS = PromoteTraits.h

nobase_include_HEADERS = Error.h HeapTracked.h ReferenceAble.h stringtok.h \
	Traits.h Reference.h ReferenceTo.h Registry.h Functor.h \
        Callback.h TextInterface.h Estimate.h Matrix.h Vector.h Jacobi.h \
        Quaternion.h Jones.h Pauli.h Basis.h Stokes.h Cloude.h  \
        tostring.h random.h EstimatePlotter.h complexPlotter.h linchi2.h \
        complex_promote.h \
	MEAL/Agent.h \
	MEAL/ArgumentBehaviour.h         MEAL/Phase.h \
	MEAL/Argument.h                  MEAL/Polar.h \
	MEAL/Axis.h                      MEAL/Polynomial.h \
	MEAL/BinaryRule.h                MEAL/ProductRule.h \
	MEAL/BinaryScalar.h              MEAL/ProjectGradient.h \
	MEAL/Boost.h                     MEAL/Projection.h \
	MEAL/ChainRule.h                 MEAL/Rotation.h \
	MEAL/Coherency.h                 MEAL/RuleMath.h \
	MEAL/Complex2Constant.h          MEAL/ScalarAbsolute.h \
	MEAL/Complex2.h                  MEAL/ScalarArgument.h \
	MEAL/Complex2Math.h              MEAL/ScalarConstant.h \
	MEAL/Complex2Value.h             MEAL/ScalarCosine.h \
	MEAL/Composite.h                 MEAL/ScalarExponential.h \
	MEAL/CongruenceTransformation.h  MEAL/Scalar.h \
	MEAL/Constant.h                  MEAL/ScalarHypCosine.h \
	MEAL/EvaluationBehaviour.h       MEAL/ScalarHypSine.h \
	MEAL/Factory.h                   MEAL/ScalarHypTangent.h \
	MEAL/Function.h                  MEAL/ScalarInverseHypTangent.h \
	MEAL/Gain.h                      MEAL/ScalarInverseTangent2.h \
	MEAL/Gaussian.h                  MEAL/ScalarLogarithm.h \
	MEAL/GaussJordan.h               MEAL/ScalarMath.h \
	MEAL/GroupRule.h                 MEAL/ScalarPower.h \
	MEAL/InverseRule.h               MEAL/ScalarRoot.h \
	MEAL/LevenbergMarquardt.h        MEAL/ScalarSine.h \
	MEAL/Mean.h                      MEAL/ScalarTangent.h \
	MEAL/NegationRule.h              MEAL/ScalarValue.h \
	MEAL/NoParameters.h              MEAL/SumRule.h \
	MEAL/NormalizeStokes.h           MEAL/Tracer.h \
	MEAL/OptimizedComplex2.h         MEAL/UnaryRule.h \
	MEAL/Optimized.h                 MEAL/UnaryScalar.h \
	MEAL/OptimizedScalar.h           MEAL/Univariate.h \
	MEAL/ParameterBehaviour.h        MEAL/UnivariateOptimizedScalar.h \
	MEAL/Parameters.h


bin_PROGRAMS = lmfit

check_PROGRAMS = test_Error test_HeapTracked test_Reference \
	test_circular_Reference test_Registry test_Functor test_Callback \
	test_Estimate test_Vector test_Matrix test_Jacobi test_eigen \
	test_Jones test_Quaternion test_Pauli test_Basis test_Stokes \
	test_Axis test_Projection test_Composite test_Scalar \
	test_Complex2Product test_TextInterface test_parse_indeces

TESTS = $(check_PROGRAMS)

test_Error_SOURCES		= test_Error.C
test_HeapTracked_SOURCES	= test_HeapTracked.C
test_Reference_SOURCES		= test_Reference.C
test_circular_Reference_SOURCES	= test_circular_Reference.C
test_Registry_SOURCES		= test_Registry.C
test_Functor_SOURCES		= test_Functor.C
test_Callback_SOURCES		= test_Callback.C
test_Estimate_SOURCES		= test_Estimate.C
test_Vector_SOURCES		= test_Vector.C
test_Matrix_SOURCES		= test_Matrix.C
test_Jacobi_SOURCES		= test_Jacobi.C
test_eigen_SOURCES		= test_eigen.C
test_Jones_SOURCES		= test_Jones.C
test_Quaternion_SOURCES		= test_Quaternion.C
test_Pauli_SOURCES		= test_Pauli.C
test_Basis_SOURCES		= test_Basis.C
test_Stokes_SOURCES		= test_Stokes.C
test_Axis_SOURCES		= test_Axis.C
test_Projection_SOURCES		= test_Projection.C
test_Composite_SOURCES		= test_Composite.C
test_Scalar_SOURCES		= test_Scalar.C
test_Complex2Product_SOURCES	= test_Complex2Product.C
test_TextInterface_SOURCES	= test_TextInterface.C
test_parse_indeces_SOURCES	= test_parse_indeces.C

lmfit_SOURCES 			= lmfit.C
lmfit_LDADD			= libunits.la @PGPLOT_LIBS@

#############################################################################
#
# PGPLOT specific code
#
if HAVE_PGPLOT

libunits_la_SOURCES += EstimatePlotter.C complexPlotter.C

endif

# ######################################################################
#
# Rule to generate PromoteTraits.h
#

PromoteTraits.h: ./header_PromoteTraits ./generate_PromoteTraits
	cp header_PromoteTraits PromoteTraits.h
	./generate_PromoteTraits

# Depend on constructed include files
Error.lo: PromoteTraits.h

BUILT_SOURCES = PromoteTraits.h

noinst_PROGRAMS = generate_PromoteTraits
generate_PromoteTraits_SOURCES = generate_PromoteTraits.C
generate_PromoteTraits_LDADD =  

##############################################################################
#
# Rule to install doxygen-generated documentation in $HOME/public_html/psrchive
#

EXPORT := ${HOME}/public_html/units

export:
	doxygen
	rm -rf $(EXPORT)
	mv doc/html $(EXPORT)
	chmod -R a+r $(EXPORT)
	chmod a+x $(EXPORT)

#############################################################################
#
# Dependencies should never be changed
#

INCLUDES = @PGPLOT_CFLAGS@

LDADD = libunits.la

