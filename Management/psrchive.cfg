#
# PSRCHIVE Configuration
#

##############################################################################
#
# The default width of the window used to calculate the statistics of the
# the off-pulse baseline [in turns]
#
baseline_duty_cycle = 0.15


##############################################################################
#
# When comparing centre frequencies to determine a match, allow them to differ
# at most by this value [in MHz]
#
max_frequency_difference = 0.1


##############################################################################
#
# When calculating the weighted centre frequency of a group of channels,
# further weight each channel by the length of the integration in seconds
# [boolean]
#
weight_by_duration = 1


##############################################################################
#
# Archive::append (used by psradd) will fail if certain observational
# parameters do not match (see Archive::mixable)  [boolean]
#
append_must_match = 1


##############################################################################
#
# Archive::append (used by psradd) will fail if sub-integrations are
# not appended in chronological order.  [boolean]
#
append_chronological = 0


##############################################################################
#
# If Archive::append_chronological is set, this determines the maximum
# time by which the start time of a sub-integration may precede
# the end time of the previous sub-integration. [in seconds]
#
append_max_overlap = 30


##############################################################################
#
# The size of the window used during median filtering is given by the
# number of frequency channels, nchan, multiplied by median_smoothing.
# If set to zero, no smoothing is performed.  A sensible value is
# around 0.05.
#
Calibrator::median_smoothing = 0.0


##############################################################################
#
# The maximum number of channels over which a linear interpolation
# will be performed is given by the number of frequency channels,
# nchan, multiplied by interpolating.  If set to zero, no
# interpolation is performed.
#
Calibrator::interpolating = 0.0


##############################################################################
#
# This parameter specifies the tolerance to non-physical values of the
# determinant of the coherency matrix.  If this parameter is set to a
# value greater than zero, then the determinant may not be less than
# -(physical_det_threshold*sigma), where sigma is the error in the
# estimate of the determinant due to noise
#
Calibrator::physical_det_threshold = 4.0



##############################################################################
#
# The long_time_scale determines the maximum amount of time that will
# be tolerated between the epoch of an observation and the epoch of a
# flux calibrator and/or reception calibrator.  By default, the long
# time scale is set to four weeks.  [in minutes]
#
Database::long_time_scale = 40320.0


##############################################################################
#
# The short_time_scale determines the maximum amount of time that will
# be tolerated between the epoch of an observation and the epoch of a
# reference calibrator.  By default, the long time scale is set to two
# hours.  [in minutes]
#
Database::short_time_scale = 120.0


##############################################################################
#
# Determines the maximum separation between an observation and a
# reference calibrator.  [in degrees]
#
Database::max_angular_separation = 5.0


##############################################################################
#
# When generating a new pulse phase predictor model in Archive::update_model,
# it is necessary to decide what derived type should be created.  There are
# currently two policies:
#  - 'input' generate a new predictor of the same type as the current one
#  - 'default' generate a new predictor of the default type
#
Predictor::policy = input


##############################################################################
#
# The default pulse phase predictor model: polyco or tempo2
#
Predictor::default = polyco


