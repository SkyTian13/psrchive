//-*-C++-*-

/*
 * Please do not edit this file.  It is automatically generated by
 * soft_swin/utils/units/generate_PromoteTraits.C, which is where you
 * can also find further details.
 *
 * Willem van Straten - 21 December 2004
 *  */

#ifndef __MEAL_PromoteTraits_h
#define __MEAL_PromoteTraits_h

#include <complex>

// forward declaration
namespace MEAL {
  class ScalarMath;
}

class PromoteTraits_not_specialized_for_this_case { };

// an empty type used to allow one template name
template<typename T>
class __promote_empty {};

//! Empty template class requires specialization 
template<typename A, typename B, template<typename> class C=__promote_empty>
class PromoteTraits {
  typedef PromoteTraits_not_specialized_for_this_case promote_type;
};

//! Partial template specialization for template types
template<typename A, typename B, template<typename> class C>
class PromoteTraits< C<A>, B > {
public:
  typedef C<promote<A,B>::promote_type> promote_type;
};

//! Partial template specialization for template types
template<typename A, typename B, template<typename> class C>
class PromoteTraits< A, C<B> > {
public:
  typedef C<promote<A,B>::promote_type> promote_type;
};

